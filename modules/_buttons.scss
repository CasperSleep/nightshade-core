//doc
// ---
// title: Buttons
// name: buttons
// category: stylekit
// ---
//
// Button styles can be applied to any element. Typically you'll want
// to use either a `<button>` or an `<a>` element. If the button is actually a link to another page, please use the `<a>` element, while if your button performs an action, such as submitting a form or triggering some javascript event, then use a `<button>` element.
//
//
// When using `<button>` the default type is `submit`. Use `type="button"`
// for anything that doesn't submit the form and `type="submit"` for anything
// that submits the form.
//
//
// ```haml_example
// %button{:type => "button", :class =>"btn btn--primary"} See the Mattress
//
// %a{:href=> "http://casper.com", :class => "btn btn--primary"} Casper
// ```
//
//
// ## Button Styles
//
// There are three main buttons styles. The base class `.btn` must be used in
// conjuction with one of the following classes to create Casper buttons.
//
// Styles                                                   | Modifier Class
// -------------------------------------------------------- | -----------------
// <button class="btn btn--primary">Primary</button>        | `btn--primary`
// <button class="btn btn--secondary">Secondary</button>    | `btn--secondary`
// <button class="btn btn--accent">Accent</button>          | `btn--accent`
// <button class="btn btn--link">Link text</button>          | `btn--link`
//
// ## Important Caveats
// On iOS, if you omit `webkit-appearance: none`, buttons with `type="submit"`
// will *not*  apply top & bottom padding as you might expect.
//
// A common mistake is to attempt to use `webkit-appearnce: button` to fix the
// problem or append `!important` to top & bottom padding values with no change.

// --- end doc

// Base class for all buttons. This class must be used when building a button
.btn {
  @extend %verlag-black;

  -webkit-appearance: none;
  transition: background-color 0.15s, color 0.15s;
  border-radius: size(normal-corners);
  cursor: pointer;
  display: inline-block;
  font-size: 0.875em;
  line-height: normal;
  text-align: center;
  padding: 1.15em 3em;
  letter-spacing: size(medium-tracking);

  // Native disabled attribute is preferred over state class
  &:disabled,
  &.is-disabled {
    pointer-events: none;
    background-color: color(disabled);
  }

  @include respond-below($break-small) {
    font-size: 0.85rem;
    padding: 1rem 1.5rem;
  }
}

// Button size modifiers
.btn--small {
  font-size: 13px;
  padding: 1em 2em;
}

// Primary button style across the site. If in doubt, use this one.
// @@@ TODO generate a mixin color + hoverstate of our buttons
.btn--primary {
  background-color: color(primary);
  color: color(background);

  #{$focus} {
    background-color: mix(color(background), color(primary), 10%);
  }

  #{$active} {
    color: mix(color(background), color(primary), 70%);
  }

  &.disabled {
    cursor: not-allowed;
    opacity: 0.7;
  }
}

// Secondary button when you still want to be scene but don't need to be first
.btn--secondary {
  background-color: color(secondary);
  color: color(primary);

  #{$focus} {
    background-color: mix(#000, color(secondary), 10%);
  }

  #{$active} {
    color: mix(color(background), color(primary), 20%);
  }
}

// Accent button to call attention
.btn--accent {
  background-color: color(accent);
  color: color(background);

  #{$focus} {
    background-color: mix(#000, color(accent), 10%);
  }

  #{$active} {
    color: mix(color(background), color(accent), 70%);
  }
}

// Link styles
.link {
  @include link(medium-text, medium-text);
  text-align: left;
  letter-spacing: size(smallest-tracking);
  font-size: inherit;
}

.link--fancy {
  @extend %serif-family-stack;
  @include link(medium-text, medium-text);
  font-style: italic;
  font-size: inherit;
}

// Loading buttons for forms
.btn--loading {
  &.is-loading {
    position: relative;
    pointer-events: none;

    @include after() {
      @include spinner($color: mix(color(background), color(primary), 70%));
      top: 50%;
      right: 1.25em;
      margin-top: -8px;
    }

    // @@@ refactor with mixins & functions
    &.btn--primary {
      background-color: mix(color(background), color(primary), 20%);
      color: mix(color(background), color(primary), 70%);
    }

    &.btn--secondary {
      background-color: mix(color(background), color(secondary), 20%);
      color: mix(color(background), color(primary), 20%);

      &:after {
        border-color: mix(color(background), color(primary), 20%);
        border-right-color: transparent;
      }
    }

    &.btn--accent {
      background-color: mix(color(background), color(accent), 20%);
      color: mix(color(background), color(accent), 70%);

      &:after {
        border-color: mix(color(background), color(accent), 70%);
        border-right-color: transparent;
      }
    }
  }
}

// Subtle button without fill
.btn--ghost {
  border: 1px solid color(dark-border);
  color: color(text);

  #{$focus} {
    background-color: color(light-grey);
  }
}

// Toggle button with an arrow that rotates
.btn-toggler {
  cursor: pointer;

  [data-icon="arrow"] {
    margin: 0 3px;
    transform: rotate(90deg);
  }

  &.is-expanded,
  &.is-invisible {
    [data-icon="arrow"] {
      transform: rotate(-90deg);
    }
  }
}

.btn--play {
  position: relative;
  display: inline-block;
  min-height: 56px;
  border-radius: 35px;
  margin-top: size(normal);
  background-color: color(light-background);
  border: 1px solid color(dark-border);
  padding: 1.45em size(large) size(normal) size(4.6em);
  cursor: pointer;
  transition: background-color 0.25s;

  @include respond-at-and-above($break-medium) {
    padding-top: size(normal);
  }

  &:hover {
    background-color: color(med-dark-background);
  }

  @include before() {
    @include square(40px);
    left: 8px;
    top: 7px;
    border-radius: percentage(1 / 2);
    background: color(background);
    border: 1px solid color(dark-border);
  }

  @include after() {
    @include arrow(right, color(primary), 10px);
    left: 24px;
    top: 31px;
    border-top-width: 6px;
    border-bottom-width: 6px;
  }
}
